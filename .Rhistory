g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,4),na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cuipoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g<-ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
class(xyplot)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?par
?trellis
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
q()
rm(list=ls())
library(swirl)
swirl
swirl(9)
dist(dataFrame)
head(distxy)
hc <- hclust(distxy)
plot(hc)
str(distxy)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.0.5,col="green")
abline(h=0.05,col="green")
dist(dFsm)
plot(hc)
hc
heatmap(dataMatrix,cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(dermt)
plot(denmt)
distmt
cmat
plot(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
which.min(distTmp, 2,which.min)
(distTmp, 2,which.min)
distTmp
apply(distTmp,2,min)
apply(distTmp,2,which.min
)
points(x,y,pch=19,cex=2,col=col1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(x,mean)
x
newClust
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
points(distTmp2,2,which.min)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%matv
matu
matv
matu%*% diag %*%t(matv)
svd(mat)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd$d
svd1$d
head(constantMatrix)
svd2 <- svd(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
svd1$u %*% svd1$d %*% svd1$v^t
svd1$u %*% svd1$d %*% (svd1$v)^t
svd1$u %*% svd1$d %*% t(svd1$v)
svd1$u %*% svd1$d %*% t(svd1$v)
svd1$u %*% svd1$d %*% t(svd1$v)
skip()
myImage(a1)
a1 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) * svd1$d[1:2]
a1 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) %*% svd1$d[1:2]
a1 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd)[562:563]
names(ssd[562:63])
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject =1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
Working_with_Colors(1:6)
Working_with_Colors(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
head(mdist)
mdist
sub1$activity
unclass(sub1$activity)
mypclust(hclustering, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
dim(svd1$u)
dim(svd1$v)
dim(svd1$s)
dim(svd1$d)
str(svd1)
str(svd1$d)
dim(svd1$d)
?svd
maxCon <- which.max(svd1$v[,2])
svd$v[,2]
svd1$v[,2]
maxCon
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub[maxCon])
names(sub1[maxCon])
names(sub1[10:12])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kCluster$cluster)
table(kClust$cluster)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
str(kClust)
kClust$size
laying
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
kClust$centers[6,]
kClust$centers[6,1:12]
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
0
0
0
00q()
q()
rm(list=ls())
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, sep="|", fixed = T)
cnames <- strsplit(cnames, sep='|', fixed = T)
cnames <- strsplit(cnames, '|', fixed = T)
names(cnames)
cnames
wcol
cnames[[1]]
cnames[1]
cnames[[1]]
make.name(cnames[[1]][wcolE)]
make.name(cnames[[1]][wcolE))
make.name(cnames[[1]][wcol))
make.name(cnames[[1]][wcol]))
make.name(cnames[[1]][wcol])
make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0
x0 <- pm0$Sample.Values
x0 <- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <=h- pm1$Sample.Value
x1 <- pm1$Sample.Value
mean(is.na(x1))
sammary(x0)
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
x1<0
negative <- x1<0
sum(negative)
sum(negative,na.rm = T)
sum(negative,na.rm = TRUE)
mean(negative,na.rm =TRUE)
dates <- as.Date(pm1$Date)
dates
as.Date(pm$Date)
as.Date(pm1$Date)
skip()
str(dates)
dates <- as.Date(dates, "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0, COunty.Code==63.2008)
pm0sub <- subset(cnt0, County.Code==63.2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2), margins=c(4,4,2,1))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(meadian(x0sub,na.rm=TRUE),lwd=2)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(median(x0sub,na.rm=TRUE),h,lwd=2)
abline(median(x0sub,na.rm=TRUE),h,lwd=2)skip()
skip()
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),h,lwd=2)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn00 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
head(mn0)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0,d1,state)
mrg <- merge(d0,d1,"state")
dim(mrg)
head(mrg)
points(mrg, plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg, plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg, points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
0
install.packages("knitr")
search
search()
library()
blti <- NEI[NEI$fips == "24510",]
NEI <- readRDS("FNEI_data/summarySCC_PM25.rds")
blti <- NEI[NEI$fips == "24510",]
NEI <- readRDS("FNEI_data/summarySCC_PM25.rds")
setwd("~/Documents/coursera/ExData_Plotting2")
blti <- NEI[NEI$fips == "24510",]
NEI <- readRDS("FNEI_data/summarySCC_PM25.rds")
SCC <- readRDS("FNEI_data/Source_Classification_Code.rds")
blti <- NEI[NEI$fips == "24510",]
total <- blti %>% group_by(year,type) %>% summarise(Emissions = sum(Emissions))
library(dplyr)
total <- blti %>% group_by(year,type) %>% summarise(Emissions = sum(Emissions))
p <- ggplot(data=total, aes(x=year, y=Emissions)) +
geom_bar(stat="identity")
library(ggplot2)
p <- ggplot(data=total, aes(x=year, y=Emissions)) +
geom_bar(stat="identity")
p
p <- ggplot(data=total, aes(x=year, y=Emissions)) +
geom_bar(stat="identity") +
theme_minimal()
p
p <- ggplot(data=total, aes(x=year, y=Emissions)) +
geom_bar(stat="identity", fill="steelblue") +
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions)) +
geom_bar(stat="identity", fill="steelblue") +
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=len), vjust=-0.3, size=3.5)+
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=Emissions), vjust=-0.3, size=3.5)+
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=Emissions), vjust=-0.3, size=3.5, color='white')+
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=as.integer(Emissions)), vjust=-0.3, size=3.5, color='white')+
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, color=type)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=as.integer(Emissions)), vjust=-0.3, size=3.5, color='white')+
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", fill="steelblue") +
geom_text(aes(label=as.integer(Emissions)), vjust=-0.3, size=3.5, color='white')+
theme_minimal()
p
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(label=as.integer(Emissions)), vjust=-0.3, size=3.5, color='white')+
theme_minimal()
p
p + theme(legend.position="top")
total
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(label=as.integer(Emissions)), position_dodge(0.9), size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(label=as.integer(Emissions)), position = position_dodge(0.9),
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
?ddply
# Calculate the cumulative sum of len for each dose
total_cumsum <- ddply(total, "year",
transform, label_ypos=cumsum(Emissions))
library(plyr)
library(plyr)
library(dplyr)
library(ggplot2)
# Calculate the cumulative sum of len for each dose
total_cumsum <- ddply(total, "year",
transform, label_ypos=cumsum(Emissions))
total_cumsum
p <- ggplot(data=total, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum[order$type,decreasing=T], aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p <- ggplot(data=total_cumsum[order(total_cumsum$type,decreasing=T),], aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", position_fill(reverse = TRUE)) +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", position_fill(reverse = TRUE)) +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar() +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity", position="fill") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
geom_text(aes(y=label_ypos, label=as.integer(Emissions)), vjust = 1.6,
size=3.5, color='white')+
theme_minimal()
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
theme_minimal()
p + theme(legend.position="top")
# save png
dev.copy(png, file = "plot3.png", height = 480, width = 480)
dev.off()
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
theme_minimal() +
labs(x = "year", y="Emissions", main="Yearly PM2.5 Emission in the Baltimore city.")
p + theme(legend.position="top")
p <- ggplot(data=total_cumsum, aes(x=as.character(year), y=Emissions, fill=type)) +
geom_bar(stat="identity") +
theme_minimal() +
labs(x = "year", y="Emissions", title="Yearly PM2.5 Emission in the Baltimore city.")
p + theme(legend.position="top")
p
# save png
dev.copy(png, file = "plot3.png", height = 480, width = 480)
dev.off()
NEI <- readRDS("FNEI_data/summarySCC_PM25.rds")
SCC <- readRDS("FNEI_data/Source_Classification_Code.rds")
blti.motor <- NEI[NEI$fips == "24510" & NEI$type == "ON-ROAD",]
blti <- blti.motor %>% group_by(year) %>% summarise(Emissions = sum(Emissions))
los.motor <- NEI[NEI$fips == "06037" & NEI$type == "ON-ROAD",]
los <- los.motor %>% group_by(year) %>% summarise(Emissions = sum(Emissions))
blti$city <- rep("Baltimore", nrow(blti))
los$city <- rep("Los Angeles", nrow(los))
blti_los <- rbind(blti, los)
p <- ggplot(data=blti_los, aes(x=as.character(year), y=Emissions, fill=city)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
labs(x = "year", y="Emissions", title="Yearly PM2.5 Motor Emission in Baltimore and LA.")
p
blti_los
blti
blti.motor
blti <- blti.motor %>% group_by(year) %>% summarise(Emissions = sum(Emissions))
blti
library(dplyr)
blti
q()
